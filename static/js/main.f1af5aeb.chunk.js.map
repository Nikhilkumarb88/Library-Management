{"version":3,"sources":["components/View.js","App.js","reportWebVitals.js","index.js"],"names":["View","books","deleteBook","map","book","isbn","title","author","className","onClick","icon","trash","App","useState","data","localStorage","getItem","JSON","parse","getDatafromLS","setbooks","setTitle","setAuthor","setIsbn","useEffect","setItem","stringify","autoComplete","onSubmit","e","preventDefault","type","required","onChange","target","value","length","filteredBooks","filter","element","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAIaA,EAAO,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,MAAMC,EAAgB,EAAhBA,WAExB,OAAOD,EAAME,KAAI,SAAAC,GAAI,OAEjB,+BACI,6BAAKA,EAAKC,OACV,6BAAKD,EAAKE,QACV,6BAAKF,EAAKG,SACV,oBAAIC,UAAU,aAAaC,QAAS,kBAAIP,EAAWE,EAAKC,OAAxD,SACI,cAAC,OAAD,CAAMK,KAAMC,cALXP,EAAKC,UCkGPO,EA5FI,WAGjB,MAA0BC,mBAbN,WACpB,IAAMC,EAAOC,aAAaC,QAAQ,SAClC,OAAIF,EACKG,KAAKC,MAAMJ,GAGX,GAO0BK,IAAnC,mBAAOlB,EAAP,KAAcmB,EAAd,KAGA,EAA0BP,mBAAS,IAAnC,mBAAOP,EAAP,KAAce,EAAd,KACA,EAA4BR,mBAAS,IAArC,mBAAON,EAAP,KAAee,EAAf,KACA,EAAwBT,mBAAS,IAAjC,mBAAOR,EAAP,KAAakB,EAAb,KA6BA,OAJAC,qBAAU,WACRT,aAAaU,QAAQ,QAASR,KAAKS,UAAUzB,MAC5C,CAACA,IAGF,sBAAKO,UAAU,UAAf,UACE,0DACA,4EACA,sBAAKA,UAAU,OAAf,UAEE,qBAAKA,UAAU,iBAAf,SACE,uBAAMmB,aAAa,MAAMnB,UAAU,aACjCoB,SAlCkB,SAACC,GAC3BA,EAAEC,iBAEF,IAAI1B,EAAO,CACTE,QACAC,SACAF,QAEFe,EAAS,GAAD,mBAAKnB,GAAL,CAAYG,KACpBiB,EAAS,IACTC,EAAU,IACVC,EAAQ,KAsBF,UAEE,0CACA,uBAAOQ,KAAK,OAAOvB,UAAU,eAAewB,UAAQ,EAClDC,SAAU,SAACJ,GAAD,OAAOR,EAASQ,EAAEK,OAAOC,QAAQA,MAAO7B,IACpD,uBACA,2CACA,uBAAOyB,KAAK,OAAOvB,UAAU,eAAewB,UAAQ,EAClDC,SAAU,SAACJ,GAAD,OAAOP,EAAUO,EAAEK,OAAOC,QAAQA,MAAO5B,IACrD,uBACA,0CACA,uBAAOwB,KAAK,OAAOvB,UAAU,eAAewB,UAAQ,EAClDC,SAAU,SAACJ,GAAD,OAAON,EAAQM,EAAEK,OAAOC,QAAQA,MAAO9B,IACnD,uBACA,wBAAQ0B,KAAK,SAASvB,UAAU,yBAAhC,sBAMJ,sBAAKA,UAAU,iBAAf,UACGP,EAAMmC,OAAS,GAAK,qCACnB,qBAAK5B,UAAU,mBAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,gCACE,+BACE,uCACA,uCACA,wCACA,6CAGJ,gCACE,cAAC,EAAD,CAAMP,MAAOA,EAAOC,WAnDjB,SAACG,GAClB,IAAMgC,EAAgBpC,EAAMqC,QAAO,SAACC,EAASC,GAC3C,OAAOD,EAAQlC,OAASA,KAE1Be,EAASiB,aAmDD,wBAAQ7B,UAAU,wBAChBC,QAAS,kBAAMW,EAAS,KAD1B,2BAGDnB,EAAMmC,OAAS,GAAK,mECtFhBK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f1af5aeb.chunk.js","sourcesContent":["import React from 'react'\nimport {Icon} from 'react-icons-kit'\nimport {trash} from 'react-icons-kit/feather/trash'\n\nexport const View = ({books,deleteBook}) => {\n    \n    return books.map(book=>(\n        \n        <tr key={book.isbn}>\n            <td>{book.isbn}</td>\n            <td>{book.title}</td>\n            <td>{book.author}</td>\n            <td className='delete-btn' onClick={()=>deleteBook(book.isbn)}>\n                <Icon icon={trash}/>\n            </td>           \n        </tr>            \n    \n))\n}","import React, { useState, useEffect } from 'react'\nimport { View } from './components/View';\n\n// getting the values of local storage\nconst getDatafromLS = () => {\n  const data = localStorage.getItem('books');\n  if (data) {\n    return JSON.parse(data);\n  }\n  else {\n    return []\n  }\n}\n\nexport const App = () => {\n\n  // main array of objects state || books state || books array of objects\n  const [books, setbooks] = useState(getDatafromLS());\n\n  // input field states\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [isbn, setIsbn] = useState('');\n\n  // form submit event\n  const handleAddBookSubmit = (e) => {\n    e.preventDefault();\n    // creating an object\n    let book = {\n      title,\n      author,\n      isbn\n    }\n    setbooks([...books, book]);\n    setTitle('');\n    setAuthor('');\n    setIsbn('');\n  }\n\n\n  const deleteBook = (isbn) => {\n    const filteredBooks = books.filter((element, index) => {\n      return element.isbn !== isbn\n    })\n    setbooks(filteredBooks);\n  }\n\n  useEffect(() => {\n    localStorage.setItem('books', JSON.stringify(books));\n  }, [books])\n\n  return (\n    <div className='wrapper'>\n      <h1>BookList Maintaince Form</h1>\n      <p>Add and view your books using local storage</p>\n      <div className='main'>\n\n        <div className='form-container'>\n          <form autoComplete=\"off\" className='form-group'\n            onSubmit={handleAddBookSubmit}>\n            <label>Title</label>\n            <input type=\"text\" className='form-control' required\n              onChange={(e) => setTitle(e.target.value)} value={title}></input>\n            <br></br>\n            <label>Author</label>\n            <input type=\"text\" className='form-control' required\n              onChange={(e) => setAuthor(e.target.value)} value={author}></input>\n            <br></br>\n            <label>ISBN#</label>\n            <input type=\"text\" className='form-control' required\n              onChange={(e) => setIsbn(e.target.value)} value={isbn}></input>\n            <br></br>\n            <button type=\"submit\" className='btn btn-success btn-md'>\n              ADD\n            </button>\n          </form>\n        </div>\n\n        <div className='view-container'>\n          {books.length > 0 && <>\n            <div className='table-responsive'>\n              <table className='table'>\n                <thead>\n                  <tr>\n                    <th>ISBN#</th>\n                    <th>Title</th>\n                    <th>Author</th>\n                    <th>Delete</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <View books={books} deleteBook={deleteBook} />\n                </tbody>\n              </table>\n            </div>\n            <button className='btn btn-danger btn-md'\n              onClick={() => setbooks([])}>Remove All</button>\n          </>}\n          {books.length < 1 && <div>No books are added yet</div>}\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}